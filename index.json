{
  "api/MackySoft.Vision.CullingGroupKey.html": {
    "href": "api/MackySoft.Vision.CullingGroupKey.html",
    "title": "Struct CullingGroupKey | Vision",
    "keywords": "Struct CullingGroupKey Key to find the CullingGroupProxy . The essence of a key is an index. The keys are defined in VisionSettings . Implements IEquatable < CullingGroupKey > Namespace : MackySoft.Vision Assembly : cs.temp.dll.dll Syntax public struct CullingGroupKey Constructors CullingGroupKey(Int32) Declaration public CullingGroupKey(int index) Parameters Type Name Description Int32 index Fields None Key with index -1. Declaration public static readonly CullingGroupKey None Field Value Type Description CullingGroupKey Methods Equals(CullingGroupKey) Declaration public bool Equals(CullingGroupKey other) Parameters Type Name Description CullingGroupKey other Returns Type Description Boolean Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() Operators Equality(CullingGroupKey, CullingGroupKey) Declaration public static bool operator ==(CullingGroupKey left, CullingGroupKey right) Parameters Type Name Description CullingGroupKey left CullingGroupKey right Returns Type Description Boolean Implicit(CullingGroupKey to Int32) Declaration public static implicit operator int (CullingGroupKey source) Parameters Type Name Description CullingGroupKey source Returns Type Description Int32 Implicit(Int32 to CullingGroupKey) Declaration public static implicit operator CullingGroupKey(int source) Parameters Type Name Description Int32 source Returns Type Description CullingGroupKey Inequality(CullingGroupKey, CullingGroupKey) Declaration public static bool operator !=(CullingGroupKey left, CullingGroupKey right) Parameters Type Name Description CullingGroupKey left CullingGroupKey right Returns Type Description Boolean Implements IEquatable<>"
  },
  "api/MackySoft.Vision.CullingGroupKeyDefinition.html": {
    "href": "api/MackySoft.Vision.CullingGroupKeyDefinition.html",
    "title": "Class CullingGroupKeyDefinition | Vision",
    "keywords": "Class CullingGroupKeyDefinition Definition of CullingGroupKey . It can be defined in VisionSettings . Basically, it is not used directly by the user. Inheritance Object CullingGroupKeyDefinition Namespace : MackySoft.Vision Assembly : cs.temp.dll.dll Syntax public class CullingGroupKeyDefinition Properties Name Declaration public string Name { get; set; } Property Value Type Description String"
  },
  "api/MackySoft.Vision.CullingGroupProxy.html": {
    "href": "api/MackySoft.Vision.CullingGroupProxy.html",
    "title": "Class CullingGroupProxy | Vision",
    "keywords": "Class CullingGroupProxy Relay component for easy access to the CullingGroup API. Inheritance Object CullingGroupProxy Namespace : MackySoft.Vision Assembly : cs.temp.dll.dll Syntax public class CullingGroupProxy : MonoBehaviour Properties BoundingDistances An array of bounding distances. The distances should be sorted in increasing order. Declaration public float[] BoundingDistances { get; set; } Property Value Type Description Single [] BoundingSpheres BoundingSphere of all culling targets. Declaration public IReadOnlyList<BoundingSphere> BoundingSpheres { get; } Property Value Type Description IReadOnlyList < BoundingSphere > DistanceReferencePoint A transform to measure the distance from. The transform's position will be automatically tracked. Declaration public Transform DistanceReferencePoint { get; set; } Property Value Type Description Transform Key A key to find this CullingGroupProxy. Declaration public CullingGroupKey Key { get; } Property Value Type Description CullingGroupKey TargetCamera Looks the CullingGroup to a specific camera. Declaration public Camera TargetCamera { get; set; } Property Value Type Description Camera Targets All culling targets. Declaration public IReadOnlyList<ICullingTarget> Targets { get; } Property Value Type Description IReadOnlyList < ICullingTarget > TargetsUpdateMode When to update the targets. If is Manual , you need to call the UpdateTargets() method to update the targets. Declaration public CullingTargetsUpdateMode TargetsUpdateMode { get; set; } Property Value Type Description CullingTargetsUpdateMode Methods Add(ICullingTarget) Add the specified target to the queue of targets to add. The timing at which its queue is applied depends on the TargetsUpdateMode . See: CullingTargetsUpdateMode Declaration public void Add(ICullingTarget target) Parameters Type Name Description ICullingTarget target GetDistance(ICullingTarget) Get the current distance band index of a given target sphere. Declaration public int GetDistance(ICullingTarget target) Parameters Type Name Description ICullingTarget target Returns Type Description Int32 The sphere current distance band index. GetGroup(CullingGroupKey) Get the enabled CullingGroupProxy with key. Declaration public static CullingGroupProxy GetGroup(CullingGroupKey key) Parameters Type Name Description CullingGroupKey key Key to get the CullingGroupProxy. Returns Type Description CullingGroupProxy Returns a CullingGroupProxy with the same key as the specified key. IndexOf(ICullingTarget) Declaration public int IndexOf(ICullingTarget target) Parameters Type Name Description ICullingTarget target Returns Type Description Int32 IsVisible(ICullingTarget) Returns true if the bounding sphere of target is currently visible from any of the contributing cameras. Declaration public bool IsVisible(ICullingTarget target) Parameters Type Name Description ICullingTarget target Returns Type Description Boolean True if the target sphere is visible, false if it is invisible. Remove(ICullingTarget) Remove the specified target at the queue of targets to remove. The timing at which its queue is applied depends on the TargetsUpdateMode . See: CullingTargetsUpdateMode Declaration public void Remove(ICullingTarget target) Parameters Type Name Description ICullingTarget target TryGetGroup(CullingGroupKey, out CullingGroupProxy) Try to get the enabled CullingGroupProxy with key. Declaration public static bool TryGetGroup(CullingGroupKey key, out CullingGroupProxy result) Parameters Type Name Description CullingGroupKey key Key to get the CullingGroupProxy. CullingGroupProxy result The CullingGroupProxy with the same key as the specified key. Returns Type Description Boolean True if the CullingGroupProxy could be got, False otherwise. UpdateAllBoundingSphereTransforms() Update the all(static/dynamic) bounding sphere transform's. Declaration public void UpdateAllBoundingSphereTransforms() UpdateAllGroupTargets() Call the UpdateTargets() method of all CullingGroupProxy's. Declaration public static void UpdateAllGroupTargets() UpdateDynamicBoundingSphereTransforms() Update only the dynamic bounding sphere transform's. Declaration public void UpdateDynamicBoundingSphereTransforms() UpdateDynamicTargets() Update the list of dynamic culling targets. If there is a change in the BoundingSphereUpdateMode of the culling target, you need to call this method or UpdateTargets() . Declaration public void UpdateDynamicTargets() UpdateTargets() Update the list of culling targets. Declaration public void UpdateTargets() Events OnStateChanged Sets the callback that will be called when a sphere's visibility and/or distance state has changed. Declaration public event CullingGroup.StateChanged OnStateChanged Event Type Type Description CullingGroup.StateChanged"
  },
  "api/MackySoft.Vision.CullingTargetBehaviour.html": {
    "href": "api/MackySoft.Vision.CullingTargetBehaviour.html",
    "title": "Class CullingTargetBehaviour | Vision",
    "keywords": "Class CullingTargetBehaviour A component that implement ICullingTarget , which can be registered to CullingGroupProxy with a key. Inheritance Object CullingTargetBehaviour Implements ICullingTarget Namespace : MackySoft.Vision Assembly : cs.temp.dll.dll Syntax public class CullingTargetBehaviour : MonoBehaviour, ICullingTarget Properties BoundingSphere BoundingSphere with transform position and radius applied. If you want to get the latest state, use UpdateAndGetBoundingSphere() . Declaration public BoundingSphere BoundingSphere { get; } Property Value Type Description BoundingSphere BoundingSphereUpdateMode When to update the bounding sphere transform. To apply this value change, you need to call the update method of CullingGroupProxy . See: UpdateTargets() , UpdateDynamicTargets() Declaration public TransformUpdateMode BoundingSphereUpdateMode { get; set; } Property Value Type Description TransformUpdateMode Group The group to which this culling target belongs. Declaration public CullingGroupProxy Group { get; } Property Value Type Description CullingGroupProxy GroupKey A key of CullingGroupProxy to register this CullingTargetBehaviour . Declaration public CullingGroupKey GroupKey { get; set; } Property Value Type Description CullingGroupKey OnStateChanged Sets the callback that will be called when a sphere visibility and/or distance state has changed. Declaration public CullingGroup.StateChanged OnStateChanged { get; set; } Property Value Type Description CullingGroup.StateChanged Radius A radius of bounding sphere. Declaration public float Radius { get; set; } Property Value Type Description Single Methods GetDistance() Get the current distance band index of the bounding sphere. Declaration public int GetDistance() Returns Type Description Int32 The sphere current distance band index. IsVisible() Returns true if the bounding sphere is currently visible from any of the contributing cameras. Declaration public bool IsVisible() Returns Type Description Boolean True if the bounding sphere is visible, false if it is invisible. UpdateAndGetBoundingSphere() Update the BoundingSphere to the latest state and returns it. Declaration public BoundingSphere UpdateAndGetBoundingSphere() Returns Type Description BoundingSphere The BoundingSphere updated to the latest state. Implements ICullingTarget"
  },
  "api/MackySoft.Vision.CullingTargetsUpdateMode.html": {
    "href": "api/MackySoft.Vision.CullingTargetsUpdateMode.html",
    "title": "Enum CullingTargetsUpdateMode | Vision",
    "keywords": "Enum CullingTargetsUpdateMode Namespace : MackySoft.Vision Assembly : cs.temp.dll.dll Syntax public enum CullingTargetsUpdateMode Fields Name Description EveryUpdate A targets will be updated automatically at every update. Manual To update the targets, you need to explicitly call the update method."
  },
  "api/MackySoft.Vision.Editor.CullingGroupKeyDefinitionDrawer.html": {
    "href": "api/MackySoft.Vision.Editor.CullingGroupKeyDefinitionDrawer.html",
    "title": "Class CullingGroupKeyDefinitionDrawer | Vision",
    "keywords": "Class CullingGroupKeyDefinitionDrawer Inheritance Object CullingGroupKeyDefinitionDrawer Namespace : MackySoft.Vision.Editor Assembly : cs.temp.dll.dll Syntax public class CullingGroupKeyDefinitionDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/MackySoft.Vision.Editor.CullingGroupKeyDrawer.html": {
    "href": "api/MackySoft.Vision.Editor.CullingGroupKeyDrawer.html",
    "title": "Class CullingGroupKeyDrawer | Vision",
    "keywords": "Class CullingGroupKeyDrawer Inheritance Object CullingGroupKeyDrawer Namespace : MackySoft.Vision.Editor Assembly : cs.temp.dll.dll Syntax public class CullingGroupKeyDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/MackySoft.Vision.Editor.CullingGroupProxyInspector.html": {
    "href": "api/MackySoft.Vision.Editor.CullingGroupProxyInspector.html",
    "title": "Class CullingGroupProxyInspector | Vision",
    "keywords": "Class CullingGroupProxyInspector Inheritance Object CullingGroupProxyInspector Namespace : MackySoft.Vision.Editor Assembly : cs.temp.dll.dll Syntax public class CullingGroupProxyInspector : UnityEditor.Editor Methods DrawHandles(CullingGroupProxy) Declaration public static void DrawHandles(CullingGroupProxy group) Parameters Type Name Description CullingGroupProxy group OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/MackySoft.Vision.Editor.CullingTargetBehaviourInspector.html": {
    "href": "api/MackySoft.Vision.Editor.CullingTargetBehaviourInspector.html",
    "title": "Class CullingTargetBehaviourInspector | Vision",
    "keywords": "Class CullingTargetBehaviourInspector Inheritance Object CullingTargetBehaviourInspector Namespace : MackySoft.Vision.Editor Assembly : cs.temp.dll.dll Syntax public class CullingTargetBehaviourInspector : UnityEditor.Editor Methods DrawHandles(CullingTargetBehaviour) Declaration public static void DrawHandles(CullingTargetBehaviour cullingTarget) Parameters Type Name Description CullingTargetBehaviour cullingTarget DrawHandles(ICullingTarget) Declaration public static void DrawHandles(ICullingTarget cullingTarget) Parameters Type Name Description ICullingTarget cullingTarget OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/MackySoft.Vision.Editor.html": {
    "href": "api/MackySoft.Vision.Editor.html",
    "title": "Namespace MackySoft.Vision.Editor | Vision",
    "keywords": "Namespace MackySoft.Vision.Editor Classes CullingGroupKeyDefinitionDrawer CullingGroupKeyDrawer CullingGroupProxyInspector CullingTargetBehaviourInspector VisionEditorUtility VisionPreferences VisionSettingsInspector VisionSettingsProvider"
  },
  "api/MackySoft.Vision.Editor.PackageTools.html": {
    "href": "api/MackySoft.Vision.Editor.PackageTools.html",
    "title": "Namespace MackySoft.Vision.Editor.PackageTools | Vision",
    "keywords": "Namespace MackySoft.Vision.Editor.PackageTools Classes UnityPackageExporter It is used to create the Vision package. It is not used by the user."
  },
  "api/MackySoft.Vision.Editor.PackageTools.UnityPackageExporter.html": {
    "href": "api/MackySoft.Vision.Editor.PackageTools.UnityPackageExporter.html",
    "title": "Class UnityPackageExporter | Vision",
    "keywords": "Class UnityPackageExporter It is used to create the Vision package. It is not used by the user. Inheritance Object UnityPackageExporter Namespace : MackySoft.Vision.Editor.PackageTools Assembly : cs.temp.dll.dll Syntax public static class UnityPackageExporter Methods Export() Declaration public static void Export() ExportPackage(String) Declaration public static string ExportPackage(string exportPath) Parameters Type Name Description String exportPath Returns Type Description String GetAssetPaths() Declaration public static string[] GetAssetPaths() Returns Type Description String []"
  },
  "api/MackySoft.Vision.Editor.Tests.CullingGroupKeyTest.html": {
    "href": "api/MackySoft.Vision.Editor.Tests.CullingGroupKeyTest.html",
    "title": "Class CullingGroupKeyTest | Vision",
    "keywords": "Class CullingGroupKeyTest Inheritance Object CullingGroupKeyTest Namespace : MackySoft.Vision.Editor.Tests Assembly : cs.temp.dll.dll Syntax public class CullingGroupKeyTest Methods EqualsAndEqualityOperatorMustReturnsSameResult() Declaration public void EqualsAndEqualityOperatorMustReturnsSameResult() NoneMustBeNegativeOne() Declaration public void NoneMustBeNegativeOne()"
  },
  "api/MackySoft.Vision.Editor.Tests.html": {
    "href": "api/MackySoft.Vision.Editor.Tests.html",
    "title": "Namespace MackySoft.Vision.Editor.Tests | Vision",
    "keywords": "Namespace MackySoft.Vision.Editor.Tests Classes CullingGroupKeyTest"
  },
  "api/MackySoft.Vision.Editor.VisionEditorUtility.html": {
    "href": "api/MackySoft.Vision.Editor.VisionEditorUtility.html",
    "title": "Class VisionEditorUtility | Vision",
    "keywords": "Class VisionEditorUtility Inheritance Object VisionEditorUtility Namespace : MackySoft.Vision.Editor Assembly : cs.temp.dll.dll Syntax public static class VisionEditorUtility Fields k_PreferencesPath Declaration public const string k_PreferencesPath = \"Preferences/MackySoft/Vision\" Field Value Type Description String k_SettingsPath Declaration public const string k_SettingsPath = \"Project/MackySoft/Vision\" Field Value Type Description String Methods CreateNewCullingGroupProxy() Declaration public static void CreateNewCullingGroupProxy() OpenDocumentation() Declaration public static void OpenDocumentation() OpenPreferences() Declaration public static void OpenPreferences() OpenSettings() Declaration public static void OpenSettings()"
  },
  "api/MackySoft.Vision.Editor.VisionPreferences.html": {
    "href": "api/MackySoft.Vision.Editor.VisionPreferences.html",
    "title": "Class VisionPreferences | Vision",
    "keywords": "Class VisionPreferences Inheritance Object VisionPreferences Namespace : MackySoft.Vision.Editor Assembly : cs.temp.dll.dll Syntax public class VisionPreferences Fields instance Declaration public static readonly VisionPreferences instance Field Value Type Description VisionPreferences Properties BoundingDistanceHandleColor Declaration public Color BoundingDistanceHandleColor { get; set; } Property Value Type Description Color DisabledSphereRadiusHandleColor Declaration public Color DisabledSphereRadiusHandleColor { get; set; } Property Value Type Description Color IdlingSphereRadiusHandleColor Declaration public Color IdlingSphereRadiusHandleColor { get; set; } Property Value Type Description Color InvisibleSphereRadiusHandleColor Declaration public Color InvisibleSphereRadiusHandleColor { get; set; } Property Value Type Description Color VisibleSphereRadiusHandleColor Declaration public Color VisibleSphereRadiusHandleColor { get; set; } Property Value Type Description Color"
  },
  "api/MackySoft.Vision.Editor.VisionSettingsInspector.html": {
    "href": "api/MackySoft.Vision.Editor.VisionSettingsInspector.html",
    "title": "Class VisionSettingsInspector | Vision",
    "keywords": "Class VisionSettingsInspector Inheritance Object VisionSettingsInspector Namespace : MackySoft.Vision.Editor Assembly : cs.temp.dll.dll Syntax public class VisionSettingsInspector : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/MackySoft.Vision.Editor.VisionSettingsProvider.html": {
    "href": "api/MackySoft.Vision.Editor.VisionSettingsProvider.html",
    "title": "Class VisionSettingsProvider | Vision",
    "keywords": "Class VisionSettingsProvider Inheritance Object VisionSettingsProvider Namespace : MackySoft.Vision.Editor Assembly : cs.temp.dll.dll Syntax public class VisionSettingsProvider : SettingsProvider Constructors VisionSettingsProvider(String, SettingsScope, IEnumerable<String>) Declaration protected VisionSettingsProvider(string path, SettingsScope scopes, IEnumerable<string> keywords = null) Parameters Type Name Description String path SettingsScope scopes IEnumerable < String > keywords Methods OnActivate(String, VisualElement) Declaration public override void OnActivate(string searchContext, VisualElement rootElement) Parameters Type Name Description String searchContext VisualElement rootElement OnDeactivate() Declaration public override void OnDeactivate() OnGUI(String) Declaration public override void OnGUI(string searchContext) Parameters Type Name Description String searchContext"
  },
  "api/MackySoft.Vision.html": {
    "href": "api/MackySoft.Vision.html",
    "title": "Namespace MackySoft.Vision | Vision",
    "keywords": "Namespace MackySoft.Vision Classes CullingGroupKeyDefinition Definition of CullingGroupKey . It can be defined in VisionSettings . Basically, it is not used directly by the user. CullingGroupProxy Relay component for easy access to the CullingGroup API. CullingTargetBehaviour A component that implement ICullingTarget , which can be registered to CullingGroupProxy with a key. VisionSettings VisionSettings is where you can configure settings related to Vision. It can be opened from the \"Tools/Vision/Open Settings\" menu. Structs CullingGroupKey Key to find the CullingGroupProxy . The essence of a key is an index. The keys are defined in VisionSettings . Interfaces ICullingTarget Enums CullingTargetsUpdateMode TransformUpdateMode When to update the transform."
  },
  "api/MackySoft.Vision.ICullingTarget.html": {
    "href": "api/MackySoft.Vision.ICullingTarget.html",
    "title": "Interface ICullingTarget | Vision",
    "keywords": "Interface ICullingTarget Namespace : MackySoft.Vision Assembly : cs.temp.dll.dll Syntax public interface ICullingTarget Properties BoundingSphere Returns the bounding sphere that was last updated. To get the latest bounding sphere, use UpdateAndGetBoundingSphere() instead. Declaration BoundingSphere BoundingSphere { get; } Property Value Type Description BoundingSphere BoundingSphereUpdateMode When to update the bounding sphere transform. Declaration TransformUpdateMode BoundingSphereUpdateMode { get; } Property Value Type Description TransformUpdateMode OnStateChanged Sets the callback that will be called when a sphere visibility and/or distance state has changed. Declaration CullingGroup.StateChanged OnStateChanged { get; set; } Property Value Type Description CullingGroup.StateChanged Methods GetDistance() Get the current distance band index of the bounding sphere. Declaration int GetDistance() Returns Type Description Int32 The sphere current distance band index. IsVisible() Returns true if the bounding sphere is currently visible from any of the contributing cameras. Declaration bool IsVisible() Returns Type Description Boolean True if the bounding sphere is visible, false if it is invisible. UpdateAndGetBoundingSphere() Update the bounding sphere to the latest state and returns it. Declaration BoundingSphere UpdateAndGetBoundingSphere() Returns Type Description BoundingSphere The bounding sphere updated to the latest state."
  },
  "api/MackySoft.Vision.TransformUpdateMode.html": {
    "href": "api/MackySoft.Vision.TransformUpdateMode.html",
    "title": "Enum TransformUpdateMode | Vision",
    "keywords": "Enum TransformUpdateMode When to update the transform. Namespace : MackySoft.Vision Assembly : cs.temp.dll.dll Syntax public enum TransformUpdateMode Fields Name Description Dynamic Transform an always updated. Static Transform is updated by the first update or by explicitly calling the update method."
  },
  "api/MackySoft.Vision.Utilities.CameraReference.html": {
    "href": "api/MackySoft.Vision.Utilities.CameraReference.html",
    "title": "Class CameraReference | Vision",
    "keywords": "Class CameraReference Advanced camera reference. Useful when referencing camera from multiple scenes and prefabs. Inheritance Object CameraReference Namespace : MackySoft.Vision.Utilities Assembly : cs.temp.dll.dll Syntax public class CameraReference Constructors CameraReference() Declaration public CameraReference() CameraReference(Camera) Declaration public CameraReference(Camera customCamera) Parameters Type Name Description Camera customCamera CameraReference(CameraReferenceMode) Declaration public CameraReference(CameraReferenceMode mode) Parameters Type Name Description CameraReferenceMode mode CameraReference(String) Declaration public CameraReference(string tag) Parameters Type Name Description String tag Properties Camera Returns a camera based on the CameraReferenceMode . The retrieved camera will be cached. Declaration public Camera Camera { get; } Property Value Type Description Camera CustomCamera Reference to the camera when Mode is Custom . Declaration public Camera CustomCamera { get; set; } Property Value Type Description Camera Mode Method of referring to the camera. Declaration public CameraReferenceMode Mode { get; set; } Property Value Type Description CameraReferenceMode Tag A tag for referencing a camera when Mode is TaggedCamera . Declaration public string Tag { get; set; } Property Value Type Description String Methods ClearCache() Set the cached camera to null. Declaration public void ClearCache() Operators Implicit(CameraReference to Camera) Declaration public static implicit operator Camera(CameraReference source) Parameters Type Name Description CameraReference source Returns Type Description Camera"
  },
  "api/MackySoft.Vision.Utilities.CameraReferenceMode.html": {
    "href": "api/MackySoft.Vision.Utilities.CameraReferenceMode.html",
    "title": "Enum CameraReferenceMode | Vision",
    "keywords": "Enum CameraReferenceMode Namespace : MackySoft.Vision.Utilities Assembly : cs.temp.dll.dll Syntax public enum CameraReferenceMode Fields Name Description CurrentCamera Custom MainCamera TaggedCamera"
  },
  "api/MackySoft.Vision.Utilities.CullingGroupTargetCameraSetter.html": {
    "href": "api/MackySoft.Vision.Utilities.CullingGroupTargetCameraSetter.html",
    "title": "Class CullingGroupTargetCameraSetter | Vision",
    "keywords": "Class CullingGroupTargetCameraSetter A useful component for linking CullingGroupProxy and camera that exist in separate scenes. Inheritance Object CullingGroupTargetCameraSetter Namespace : MackySoft.Vision.Utilities Assembly : cs.temp.dll.dll Syntax public class CullingGroupTargetCameraSetter : MonoBehaviour Properties GroupKey Key to reference the CullingGroupProxy . Declaration public CullingGroupKey GroupKey { get; set; } Property Value Type Description CullingGroupKey LinkOnEnableOrStart Declaration public bool LinkOnEnableOrStart { get; set; } Property Value Type Description Boolean TargetCamera A reference to the camera you want to set to TargetCamera . Declaration public CameraReference TargetCamera { get; set; } Property Value Type Description CameraReference Methods Link() Set the specified camera to the TargetCamera of the specified CullingGroupProxy . See: GroupKey , TargetCamera Declaration public void Link()"
  },
  "api/MackySoft.Vision.Utilities.CullingTargetComponents.html": {
    "href": "api/MackySoft.Vision.Utilities.CullingTargetComponents.html",
    "title": "Class CullingTargetComponents | Vision",
    "keywords": "Class CullingTargetComponents A simple component that enable/disable the specified component's depending on the visibility of the attached ICullingTarget . Inheritance Object CullingTargetComponents Namespace : MackySoft.Vision.Utilities Assembly : cs.temp.dll.dll Syntax public class CullingTargetComponents : MonoBehaviour Properties Components A component's to enable/disable. Declaration public Behaviour[] Components { get; set; } Property Value Type Description Behaviour []"
  },
  "api/MackySoft.Vision.Utilities.CullingTargetGameObjects.html": {
    "href": "api/MackySoft.Vision.Utilities.CullingTargetGameObjects.html",
    "title": "Class CullingTargetGameObjects | Vision",
    "keywords": "Class CullingTargetGameObjects A simple component that enable/disable the specified component's depending on the visibility of the attached ICullingTarget . WARN: If you target your self game object, CullingTarget will also be disabled. Inheritance Object CullingTargetGameObjects Namespace : MackySoft.Vision.Utilities Assembly : cs.temp.dll.dll Syntax public class CullingTargetGameObjects : MonoBehaviour Properties GameObjects A GameObjects's to active/inactive. WARN: If you target your self game object, CullingTarget will also be disabled. Declaration public GameObject[] GameObjects { get; set; } Property Value Type Description GameObject []"
  },
  "api/MackySoft.Vision.Utilities.CullingTargetRenderers.html": {
    "href": "api/MackySoft.Vision.Utilities.CullingTargetRenderers.html",
    "title": "Class CullingTargetRenderers | Vision",
    "keywords": "Class CullingTargetRenderers A simple component that enable/disable the specified renderer's depending on the visibility of the attached ICullingTarget . Inheritance Object CullingTargetRenderers Namespace : MackySoft.Vision.Utilities Assembly : cs.temp.dll.dll Syntax public class CullingTargetRenderers : MonoBehaviour Properties Renderers A renderer's to enable/disable. Declaration public Renderer[] Renderers { get; set; } Property Value Type Description Renderer []"
  },
  "api/MackySoft.Vision.Utilities.Editor.CameraReferenceDrawer.html": {
    "href": "api/MackySoft.Vision.Utilities.Editor.CameraReferenceDrawer.html",
    "title": "Class CameraReferenceDrawer | Vision",
    "keywords": "Class CameraReferenceDrawer Inheritance Object CameraReferenceDrawer Namespace : MackySoft.Vision.Utilities.Editor Assembly : cs.temp.dll.dll Syntax public class CameraReferenceDrawer : PropertyDrawer Methods OnGUI(Rect, SerializedProperty, GUIContent) Declaration public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) Parameters Type Name Description Rect position SerializedProperty property GUIContent label"
  },
  "api/MackySoft.Vision.Utilities.Editor.CullingTargetComponentsInspector.html": {
    "href": "api/MackySoft.Vision.Utilities.Editor.CullingTargetComponentsInspector.html",
    "title": "Class CullingTargetComponentsInspector | Vision",
    "keywords": "Class CullingTargetComponentsInspector Inheritance Object CullingTargetComponentsInspector Namespace : MackySoft.Vision.Utilities.Editor Assembly : cs.temp.dll.dll Syntax public class CullingTargetComponentsInspector : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/MackySoft.Vision.Utilities.Editor.CullingTargetGameObjectsInspector.html": {
    "href": "api/MackySoft.Vision.Utilities.Editor.CullingTargetGameObjectsInspector.html",
    "title": "Class CullingTargetGameObjectsInspector | Vision",
    "keywords": "Class CullingTargetGameObjectsInspector Inheritance Object CullingTargetGameObjectsInspector Namespace : MackySoft.Vision.Utilities.Editor Assembly : cs.temp.dll.dll Syntax public class CullingTargetGameObjectsInspector : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/MackySoft.Vision.Utilities.Editor.CullingTargetRenderersInspector.html": {
    "href": "api/MackySoft.Vision.Utilities.Editor.CullingTargetRenderersInspector.html",
    "title": "Class CullingTargetRenderersInspector | Vision",
    "keywords": "Class CullingTargetRenderersInspector Inheritance Object CullingTargetRenderersInspector Namespace : MackySoft.Vision.Utilities.Editor Assembly : cs.temp.dll.dll Syntax public class CullingTargetRenderersInspector : UnityEditor.Editor Methods OnInspectorGUI() Declaration public override void OnInspectorGUI()"
  },
  "api/MackySoft.Vision.Utilities.Editor.html": {
    "href": "api/MackySoft.Vision.Utilities.Editor.html",
    "title": "Namespace MackySoft.Vision.Utilities.Editor | Vision",
    "keywords": "Namespace MackySoft.Vision.Utilities.Editor Classes CameraReferenceDrawer CullingTargetComponentsInspector CullingTargetGameObjectsInspector CullingTargetRenderersInspector"
  },
  "api/MackySoft.Vision.Utilities.html": {
    "href": "api/MackySoft.Vision.Utilities.html",
    "title": "Namespace MackySoft.Vision.Utilities | Vision",
    "keywords": "Namespace MackySoft.Vision.Utilities Classes CameraReference Advanced camera reference. Useful when referencing camera from multiple scenes and prefabs. CullingGroupTargetCameraSetter A useful component for linking CullingGroupProxy and camera that exist in separate scenes. CullingTargetComponents A simple component that enable/disable the specified component's depending on the visibility of the attached ICullingTarget . CullingTargetGameObjects A simple component that enable/disable the specified component's depending on the visibility of the attached ICullingTarget . WARN: If you target your self game object, CullingTarget will also be disabled. CullingTargetRenderers A simple component that enable/disable the specified renderer's depending on the visibility of the attached ICullingTarget . Enums CameraReferenceMode"
  },
  "api/MackySoft.Vision.VisionSettings.html": {
    "href": "api/MackySoft.Vision.VisionSettings.html",
    "title": "Class VisionSettings | Vision",
    "keywords": "Class VisionSettings VisionSettings is where you can configure settings related to Vision. It can be opened from the \"Tools/Vision/Open Settings\" menu. Inheritance Object VisionSettings Namespace : MackySoft.Vision Assembly : cs.temp.dll.dll Syntax public class VisionSettings : ScriptableObject Properties GroupKeyDefinitions Definition list of culling group key. Used to display the CullingGroupKey as a popup in the inspector. Declaration public IReadOnlyList<CullingGroupKeyDefinition> GroupKeyDefinitions { get; } Property Value Type Description IReadOnlyList < CullingGroupKeyDefinition > Instance A singleton of VisionSettings. This instance will be loaded from \"Resources/VisionSettings\". Declaration public static VisionSettings Instance { get; } Property Value Type Description VisionSettings"
  },
  "changelog/CHANGELOG.html": {
    "href": "changelog/CHANGELOG.html",
    "title": "Changelog | Vision",
    "keywords": "Changelog All notable changes to this project will be documented in this file. The format is based on Keep a Changelog , and this project adheres to Semantic Versioning . [1.2.1] - 2021-04-25 Changed Renamed from VisionSettingsInitializer to VisionSettingsGenerator . Implemented the VISION_DISABLE_GENERATE_SETTINGS definition symbol again to avoid the Resources folder being included in the OpwnUPM package. [1.2.0] - 2021-04-25 Added Added CullingTargetComponents and CullingTargetGameObjects . These components work the same as CullingTargetRenderers . Changed Moved coponent menu of utility components to MackySoft/Vision/Utilities/ . UnityPackageExporter is now exclude the Resources folder. VisionSettingsInitializer is now generate VisionSettings always. [1.1.5] - 2021-04-21 Changed If the CullingTargetBehaviour.GroupKey is not set, a warning will now be displayed in the Inspector. [1.1.4] - 2021-04-20 Fixed Fixed VisionSettings could not be generated when installed via Open UPM. [1.1.3] - 2021-04-20 Added Added an unit tests. Changed Every time there is a change in the repository, unit tests and build tests on each platform are now performed. This ensures a certain level of package quality. [1.1.2] - 2021-04-18 Fixed Fixed FilePathAttribute is inaccessible due to its protection level, which was occurring in Unity 2019. [1.1.1] - 2021-03-29 Added Added the ColorSwitcher . Removed Removed the MaterialSwitcher . Removed the material's from example assets. Removed the Resources/VisionSettings . Changed The automatic generation of VisionSettings can now be avoided by defining the VISION_DISABLE_GENERATE_SETTINGS definition symbol. This is a measure to avoid including auto-generated VisionSettings in the package. They will not be used by the user. [1.1.0] - 2021-03-20 Added Added the example scenes. Changed When the CullingGroupProxy is selected in hierarchy during playmode, the TargetCamera frustum gizmo and the culling target handle's are now also displayed. CullingTargetRenderers now perform a null check on Rendrerers . [1.0.2] - 2021-03-16 Added Added the LinkOnEnableOrStart property and Link method to CullingGroupTargetSetter . Removed Removed the constructor of CullingGroupKeyDefinition . Changed Renamed CameraSourceMode to CameraReferenceMode . Updated some documents. [1.0.1] - 2021-03-15 Added Added the VisionSettingsInitializer . VisionSettings will now be generated automatically. [1.0.0] - 2021-03-14 First release"
  },
  "index.html": {
    "href": "index.html",
    "title": "Vision - CullingGroup API for everyone | Vision",
    "keywords": "Vision - CullingGroup API for everyone Created by Hiroya Aramaki ( Makihiro ) What is CullingGroup API ? CullingGroup offers a way to integrate your own systems into Unity’s culling and LOD pipeline. Simulating a crowd of people, while only having full GameObjects for the characters that are actually visible right now. Building a GPU particle system driven by Graphics.DrawProcedural, but skipping rendering particle systems that are behind a wall. Tracking which spawn points are hidden from the camera in order to spawn enemies without the player seeing them ‘pop’ into view. Switching characters from full-quality animation and AI calculations when close, to lower-quality cheaper behaviour at a distance. Having 10,000 marker points in your scene and efficiently finding out when the player gets within 1m of any of them. Unity Manual: https://docs.unity3d.com/Manual/CullingGroupAPI.html Why Vision ? CullingGroup is a great feature, but its implementation is a difficult because it can only be accessed through scripts and its usage is quirky. Vision has made such a CullingGroup available to everyone. Vision Features Components for easy access to CullingGroup. Intuitive visual editor. High performance Table of Contents 📥 Installation 🔰 Usage 1. Create the CullingGroupProxy 2. Attach the CullingTargetBehaviour 3. Receive a callback ⚒Utilities Culling Target Renderers ✉ Help & Contribute 📔 Author Info 📜 License 📥 Installation Download any version from releases. Releases: https://github.com/mackysoft/Vision/releases Install via Open UPM Or, you can install this package from the Open UPM registry. More details here . openupm add com.mackysoft.vision 🔰 Usage 1. Create the CullingGroupProxy First, create a CullingGroupProxy , which is the core of Vision. 1. From the Tools/Vision/Create New CullingGroupProxy menu, create a CullingGroupProxy . 2. Set the key to the created CullingGroupProxy . Set the key by clicking the Key popup in CullingGroupProxy . By default, there is a Main key. If you don't see the key, open settings from the <add key> or Tools/Vision/Open Settings menu. You can define a new key in the GroupKeyDefinitions list. 3. Distances By setting DistanceReferencePoint and BoundingDistances of CullingGroupProxy , you can calculate the relative distance between a reference point (for example, camera, player) and the bounding sphere's. If BoundingDistances is set to { 10f, 20f, 30f } , Distance Level Range Level 0 0m ~ 10m Level 1 10m ~ 20m Level 2 20m ~ 30m The last level and beyond will be treated as invisible. If Distances is empty, { 0f , Mathf.Infinity } will be used as a fallback. In that case, currentDistance will always be 1. BoundingDistances can be adjusted visually from the scene view ! 2. Attach the CullingTargetBehaviour CullingTargetBehaviour is a component that attaches to the object to be culled. 1. Attach CullingTargetBehaviour from Component/MackySoft/Vision/Culling Group Behaviour menu. Attach this component to objects that you want to show/hide depending on their visibility, or change their quality depending on their relative distance. 2. Set the group key to the attached CullingGroupBehaviour . The GroupKey of the CullingGroupBehaviour is used to find a CullingGroupProxy with the same key specified, and the CullingGroupBehaviour will be registered with the found CullingGroupProxy . 3. Adjust the radius of CullingGroupBehaviour . The bounding sphere of the CullingGroupBehaviour is used to calculate the visibility by the CullingGroup . Completely enclose the object you want to cull with the bounding sphere. Radius can be adjusted visually from the scene view ! Also, during play mode, the color changes depending on visibility. 4. Select the BoundingSphereUpdateMode . This is an important value for performance. BoundingSphereUpdateMode is set to Dynamic by default. This means that the transform of bounding sphere will be updated every frame. However, there are some objects that do not move. In such cases, you can avoid the extra update cost by setting the BoundingSphereUpdateMode to Static . 3. Receive a callback Use CullingTargetBehaviour.OnStateChanged callback to respond to changes in the visibility and distance state of the bounding sphere. using UnityEngine; using MackySoft.Vision; [RequireComponent(typeof(CullingTargetBehaviour))] public class ReceiveCallbackExample : MonoBehaviour { void Awake () { var cullingTarget = GetComponent<ICullingTarget>(); cullingTarget.OnStateChanged += OnStateChanged; } void OnStateChanged (CullingGroupEvent ev) { if (ev.isVisible) { Debug.Log(\"Visible!\"); } else { Debug.Log(\"Invisible!\"); } } } Utilities Vision provides utility components that can be used with no coding. Culling Target Renderers Enable / Disable the specified renderer's depending on the visibility of the bounding sphere. ✉ Help & Contribute Questions and ideas are welcome in discussions . We welcome contributions such as bug reports and pull requests . 📔 Author Info Hiroya Aramaki is a indie game developer in Japan. Blog: https://mackysoft.net/blog Twitter: https://twitter.com/makihiro_dev 📜 License This library is under the MIT License."
  },
  "manual/example.html": {
    "href": "manual/example.html",
    "title": "01 - Visiblity | Vision",
    "keywords": "About the example scenes that comes with Vision. An example scenes can be found under Assets/MackySoft/MackySoft.Vision/Example/ folder. 01 - Visiblity An example of controlling an object by its visibility. 02 - Distance An example of controlling an object by its distance relative to a specified point."
  },
  "manual/get-started.html": {
    "href": "manual/get-started.html",
    "title": "1. Create the CullingGroupProxy | Vision",
    "keywords": "1. Create the CullingGroupProxy First, create a CullingGroupProxy , which is the core of Vision. 1. From the Tools/Vision/Create New CullingGroupProxy menu, create a CullingGroupProxy . 2. Set the key to the created CullingGroupProxy . Set the key by clicking the Key popup in CullingGroupProxy . By default, there is a Main key. If you don't see the key, open settings from the <add key> or Tools/Vision/Open Settings menu. You can define a new key in the GroupKeyDefinitions list. 3. Distances By setting DistanceReferencePoint and BoundingDistances of CullingGroupProxy , you can calculate the relative distance between a reference point (for example, camera, player) and the bounding sphere's. If BoundingDistances is set to { 10, 20, 30 }, Distance Level Range Level 0 0m ~ 10m Level 1 10m ~ 20m Level 2 20m ~ 30m The last level and beyond will be treated as invisible. BoundingDistances can be adjusted visually from the scene view ! 2. Attach the CullingTargetBehaviour CullingTargetBehaviour is a component that attaches to the object to be culled. 1. Attach CullingTargetBehaviour from Component/MackySoft/Vision/Culling Group Behaviour menu. Attach this component to objects that you want to show/hide depending on their visibility, or change their quality depending on their relative distance. 2. Set the group key to the attached CullingGroupBehaviour . The GroupKey of the CullingGroupBehaviour is used to find a CullingGroupProxy with the same key specified, and the CullingGroupBehaviour will be registered with the found CullingGroupProxy . 3. Adjust the radius of CullingGroupBehaviour . The bounding sphere of the CullingGroupBehaviour is used to calculate the visibility by the CullingGroup . Completely enclose the object you want to cull with the bounding sphere. Radius can be adjusted visually from the scene view ! Also, during play mode, the color changes depending on visibility. 4. Select the BoundingSphereUpdateMode . This is an important value for performance. BoundingSphereUpdateMode is set to Dynamic by default. This means that the transform of bounding sphere will be updated every frame. However, there are some objects that do not move. In such cases, you can avoid the extra update cost by setting the BoundingSphereUpdateMode to Static . 3. Receive a callback Use CullinTargetBehaviour.OnStateChanged callback to respond to changes in the visibility and distance state of the bounding sphere. using UnityEngine; using MackySoft.Vision; [RequireComponent(typeof(CullingTargetBehaviour))] public class ReceiveCallbackExample : MonoBehaviour { void Awake () { var cullingTarget = GetComponent<ICullingTarget>(); cullingTarget.OnStateChanged += OnStateChanged; } void OnStaeteChanged (CullingGroupEvent ev) { if (ev.isVisible) { Debug.Log(\"Visible!\"); } else { Debug.Log(\"Invisible!\"); } } }"
  }
}